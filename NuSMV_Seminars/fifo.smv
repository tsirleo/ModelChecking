MODULE fifo (enq_val, enq_data, deq_val, deq_data)
    VAR
        data: array 0..8 of word[8];
        beg: word[3];
        end: word[3];
        size: word[3];
        full:boolean;
    ASSIGN
        init(beg):=0b_000;
        init(end):=0b_000;
        init(full):=False;

        next(beg):= case:
            deq_val:beg+0b_001;
            TRUE:beg;
        esac;
        next(end):= case:
            deq_val:end+0b_001;
            TRUE:end;
        esac;
        deq_data:=data[beg];
        next(data[0])=case enq_val & end=0d3_0: enq_data; TRUE: data[0]; esac;
        next(data[1])=case enq_val & end=0d3_1: enq_data; TRUE: data[1]; esac;
        next(data[2])=case enq_val & end=0d3_2: enq_data; TRUE: data[2]; esac;
        next(data[3])=case enq_val & end=0d3_3: enq_data; TRUE: data[3]; esac;
        next(data[4])=case enq_val & end=0d3_4: enq_data; TRUE: data[4]; esac;
        next(data[5])=case enq_val & end=0d3_5: enq_data; TRUE: data[5]; esac;
        next(data[6])=case enq_val & end=0d3_6: enq_data; TRUE: data[6]; esac;
        next(data[7])=case enq_val & end=0d3_7: enq_data; TRUE: data[7]; esac;
        
        next(full):=

    DEFINE
        is_empty:=begin=empty & !full;
        is_full:=full;
        
MODULE main
