MODULE p(exec, flag0, flag1, turn, i)
    VAR
        state: { NCS, SET, SET1, TST, CRS, RST };
    ASSIGN
        init(state) := NCS;
        next(state) := case
                        !exec : state;
                        state = NCS : SET;
                        state = SET : SET1;
                        state = SET1 : TST;
                        state = TST & flag1 = TRUE & turn = i : TST;
                        state = TST : CRS;
                        state = CRS : RST;
                        state = RST : NCS;
                      esac;
        init(flag0) := FALSE;
        next(flag0) := case
                        state = SET : TRUE;
                        state = RST: FALSE;
                        TRUE : flag0;
                      esac;

MODULE main
    VAR
        flag0 : boolean;
        flag1 : boolean;
        turn : word[1];
        exec0 : boolean;
        exec1 : boolean;
        p0 : p(exec0, flag0, flag1, turn, 0b_0);
        p1 : p(exec1, flag1, flag0, turn, 0b_1);
    ASSIGN
        init(turn) := 0b_0;
        next(turn) := case
                        exec0 & p0.state = SET1 : 0b_0;
                        exec1 & p1.state = SET1 : 0b_1;
                        TRUE : turn;
                      esac;
    INVAR
        count(exec0, exec1) = 1;
    LTLSPEC
        G(!(p0.state = CRS & p1.state = CRS))
    LTLSPEC
        G(p0.state = SET -> F(p0.state = CRS))
    JUSTICE exec0
    JUSTICE exec1
